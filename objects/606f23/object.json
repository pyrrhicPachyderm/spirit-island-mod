{
  "Name": "Custom_Tile",
  "Transform": {
    "posX": -83.33634948730469,
    "posY": 1.1448583602905273,
    "posZ": 40.45702362060547,
    "rotX": 0.004471934866160154,
    "rotY": 179.9999542236328,
    "rotZ": 180.36563110351562,
    "scaleX": 5.460000038146973,
    "scaleY": 1.0,
    "scaleZ": 5.460000038146973
  },
  "Nickname": "Bringer of Dreams and Nightmares",
  "Description": "Base",
  "GMNotes": "",
  "ColorDiffuse": {
    "r": 0.2002696990966797,
    "g": 0.16031497716903687,
    "b": 0.1517532467842102
  },
  "Tags": [
    "Spirit"
  ],
  "LayoutGroupSortIndex": 0,
  "Locked": true,
  "Grid": true,
  "Snap": true,
  "IgnoreFoW": false,
  "MeasureMovement": false,
  "DragSelectable": true,
  "Autoraise": true,
  "Sticky": true,
  "Tooltip": true,
  "GridProjection": false,
  "HideWhenFaceDown": false,
  "Hands": false,
  "CustomImage": {
    "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1617312248752025790/459C3BAA8C6830F1320C53805BDEFD37B2DB94EA/",
    "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1617312248752026133/2EDFBC06C5FE9B196487F457A4A068964359284E/",
    "ImageScalar": 1.0,
    "WidthScale": 0.0,
    "CustomTile": {
      "Type": 0,
      "Thickness": 0.20000000298023224,
      "Stackable": false,
      "Stretch": true
    }
  },
  "AttachedSnapPoints": [
    {
      "Position": {
        "x": -0.045803502202034,
        "y": 0.2000013291835785,
        "z": -0.3963654339313507
      },
      "Tags": []
    },
    {
      "Position": {
        "x": -0.04935725778341293,
        "y": 0.20000138878822327,
        "z": -0.08053477853536606
      },
      "Tags": []
    },
    {
      "Position": {
        "x": -0.2724810540676117,
        "y": 0.2000008225440979,
        "z": -0.39527103304862976
      },
      "Tags": []
    },
    {
      "Position": {
        "x": -0.27270379662513733,
        "y": 0.20000046491622925,
        "z": -0.08249422907829285
      },
      "Tags": []
    },
    {
      "Position": {
        "x": -0.4873000383377075,
        "y": 0.20000049471855164,
        "z": -0.3973052203655243
      },
      "Tags": []
    },
    {
      "Position": {
        "x": -0.4902610182762146,
        "y": 0.2000005692243576,
        "z": -0.08148223161697388
      },
      "Tags": []
    },
    {
      "Position": {
        "x": -0.7080333232879639,
        "y": 0.2000005543231964,
        "z": -0.39645275473594666
      },
      "Tags": []
    },
    {
      "Position": {
        "x": -0.7112560868263245,
        "y": 0.20000039041042328,
        "z": -0.0804196149110794
      },
      "Tags": []
    },
    {
      "Position": {
        "x": -0.9315334558486938,
        "y": 0.2000008225440979,
        "z": -0.3984107971191406
      },
      "Tags": []
    },
    {
      "Position": {
        "x": -0.9316842555999756,
        "y": 0.20000092685222626,
        "z": -0.07974832504987717
      },
      "Tags": []
    },
    {
      "Position": {
        "x": -1.1519405841827393,
        "y": 0.20000135898590088,
        "z": -0.39701205492019653
      },
      "Tags": []
    }
  ],
  "States": {
    "2": {
      "GUID": "b28d1d",
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -83.33634948730469,
        "posY": 1.1448583602905273,
        "posZ": 40.45702362060547,
        "rotX": 0.004471934866160154,
        "rotY": 179.9999542236328,
        "rotZ": 180.36563110351562,
        "scaleX": 5.460000038146973,
        "scaleY": 1.0,
        "scaleZ": 5.460000038146973
      },
      "Nickname": "Bringer of Dreams and Nightmares",
      "Description": "Base",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.20027890801429749,
        "g": 0.16032418608665466,
        "b": 0.151762455701828
      },
      "Tags": [
        "Spirit"
      ],
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "http://cloud-3.steamusercontent.com/ugc/1749057496680614961/7F089E63A8759A8A410BB99A8012A135FC40E683/",
        "ImageSecondaryURL": "http://cloud-3.steamusercontent.com/ugc/1617312248752026133/2EDFBC06C5FE9B196487F457A4A068964359284E/",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.20000000298023224,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "-- Spirit Tile for Bone White's Spirit Island Mod v2 --\nuseProgression = false\nprogressionCard = nil\nuseAspect = 2\naspect = nil\nbroadcast = nil\n\nfunction onLoad(saved_data)\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        broadcast = loaded_data.broadcast\n    end\n\n    Color.Add(\"SoftBlue\", Color.new(0.45,0.6,0.7))\n    if Global.getVar(\"gameStarted\") then return end\n\n    self.createButton({\n        click_function = \"SetupSpirit\",\n        function_owner = self,\n        label          = \"Choose Spirit\",\n        position       = Vector(0.7, -0.1, 0.9),\n        rotation       = Vector(0,0,180),\n        scale = Vector(0.2,0.2,0.2),\n        width          = 1800,\n        height         = 500,\n        font_size      = 300,\n    })\n    self.createButton({\n        click_function = \"ToggleProgression\",\n        function_owner = self,\n        label          = \"\",\n        position       = Vector(-0.7, -0.1, 0.9),\n        rotation       = Vector(0,0,180),\n        scale = Vector(0.2,0.2,0.2),\n        width          = 0,\n        height         = 0,\n        font_size      = 300,\n        tooltip        = \"Enable/Disable Progression Deck\",\n    })\n    self.createButton({\n        click_function = \"ToggleAspect\",\n        function_owner = self,\n        label          = \"\",\n        position       = Vector(0.7, -0.2, 0.4),\n        rotation       = Vector(0,0,180),\n        scale = Vector(0.2,0.2,0.2),\n        width          = 0,\n        height         = 0,\n        font_size      = 300,\n        tooltip        = \"Enable/Disable Aspect Deck\",\n    })\n    local castObjects = upCast(self)\n    for _,obj in pairs (castObjects) do\n        if string.find(obj.getName(),\"Progression\") then\n            progressionCard = obj\n            self.editButton({\n                index          = 1,\n                label          = \"Progression: No\",\n                width          = 2200,\n                height         = 500,\n            })\n        elseif string.find(obj.getName(),\"Aspects\") then\n            self.editButton({\n                index          = 2,\n                label          = \"Aspects: All\",\n                width          = 2300,\n                height         = 500,\n            })\n        end\n    end\n    Global.call(\"addSpirit\", {spirit=self})\nend\n\nfunction RandomAspect()\n    for _,obj in pairs(upCast(self)) do\n        if obj.type == \"Deck\" and obj.getName() == \"Aspects\" then\n            local objs = obj.getObjects()\n            local index = math.random(0,#objs)\n            if index == 0 then\n                return \"\"\n            end\n            return objs[index].name\n        end\n    end\n    return nil\nend\nfunction PickSpirit(params)\n    if params.aspect then\n        if params.aspect == \"Random\" then\n            useAspect = 1\n        elseif params.aspect == \"\" then\n            useAspect = 0\n        else\n            useAspect = 3\n            aspect = params.aspect\n        end\n    end\n    SetupSpirit(nil, params.color)\nend\nfunction SetupSpirit(object_pick,player_color)\n    local xPadding = 1.3\n    local xOffset = 1\n    local PlayerBag = getObjectFromGUID(Global.getTable(\"PlayerBags\")[player_color])\n    if #PlayerBag.getObjects() ~= 0 then\n        local castObjects = upCast(self)\n        local hpos = Player[player_color].getHandTransform().position\n        self.setPosition(Vector(hpos.x,0,hpos.z) + Vector(0,1.05,11.8))\n        self.setRotation(Vector(0,180,0))\n        self.setLock(true)\n        self.clearButtons()\n        local spos = self.getPosition()\n        local snaps = self.getSnapPoints()\n        local placed = 0\n\n        -- Setup Presence\n        for i = 1,13 do\n            local p = snaps[i]\n            if i <= #snaps then\n                PlayerBag.takeObject({position = self.positionToWorld(p.position)})\n            else\n                PlayerBag.takeObject({position = Vector(spos.x,0,spos.z) + Vector(-placed*xPadding+xOffset,1.1,10)})\n                placed = placed + 1\n            end\n        end\n\n        -- Setup Ready Token\n        local ready = PlayerBag.takeObject({\n            position = Vector(spos.x,0,spos.z) + Vector(7.5, 1.1, 6.5),\n            rotation = Vector(0, 180, 0),\n        })\n\n        -- Setup Energy Counter\n        local counter = getObjectFromGUID(Global.getVar(\"counterBag\")).takeObject({position = Vector(spos.x,0,spos.z) + Vector(-5,1,5)})\n        counter.setLock(true)\n\n        Global.call(\"removeSpirit\", {spirit=self.guid, color=player_color, ready=ready, counter=counter})\n\n        -- Setup Progression Deck if enabled\n        if useProgression then\n            local minorPowerDeck = getObjectFromGUID(Global.getVar(\"minorPowerZone\")).getObjects()[1]\n            local majorPowerDeck = getObjectFromGUID(Global.getVar(\"majorPowerZone\")).getObjects()[1]\n            local progressionDeck = progressionCard.getVar(\"progressionDeck\")\n            for i,card in pairs(progressionDeck) do\n                if card[2] then\n                    majorPowerDeck.takeObject({\n                        position = Vector(spos.x,i,spos.z) + Vector(0,1.1,14),\n                        rotation = Vector(0,180,180),\n                        guid = card[1],\n                    })\n                else\n                    minorPowerDeck.takeObject({\n                        position = Vector(spos.x,i,spos.z) + Vector(0,1.1,14),\n                        rotation = Vector(0,180,180),\n                        guid = card[1],\n                    })\n                end\n            end\n        end\n\n        -- Setup objects on top of board\n        for _, obj in pairs(castObjects) do\n            obj.setLock(false)\n            if obj.type == \"Deck\" then\n                if obj.getName() == \"Aspects\" then\n                    HandleAspect(obj, player_color)\n                else\n                    obj.deal(#obj.getObjects(),player_color)\n                end\n            elseif obj.type == \"Card\" and obj.getName() == \"Progression\" then\n                if useProgression then\n                    obj.setPositionSmooth(Vector(spos.x,8,spos.z) + Vector(0,1.1,14))\n                else\n                    obj.destruct()\n                end\n            else\n                obj.setPositionSmooth(Vector(spos.x,0,spos.z) + Vector(-placed*xPadding+xOffset,1.1,10))\n                placed = placed + 1\n            end\n        end\n\n        if broadcast ~= nil then\n            Player[player_color].broadcast(broadcast, Color.SoftBlue)\n        end\n    else\n        Player[player_color].broadcast(\"You already picked a spirit\", \"Red\")\n    end\nend\nfunction HandleAspect(deck, player_color)\n    if useAspect == 0 then\n        deck.destruct()\n    elseif useAspect == 1 then\n        local index = math.random(0,#deck.getObjects())\n        if index == 0 then\n            Player[player_color].broadcast(\"Your random Aspect is no Aspect\", Color.SoftBlue)\n            deck.destruct()\n        else\n            deck.takeObject({\n                index = index - 1,\n                position = deck.getPosition() + Vector(0,2,0),\n                callback_function = function(obj) obj.deal(1, player_color) deck.destruct() Player[player_color].broadcast(\"Your random Aspect is \"..obj.getName(), Color.SoftBlue) end,\n            })\n            if deck.remainder then deck = deck.remainder end\n        end\n    elseif useAspect == 3 then\n        local found = false\n        for _, data in pairs(deck.getObjects()) do\n            if data.name == aspect then\n                found = true\n                deck.takeObject({\n                    index = data.index,\n                    position = deck.getPosition() + Vector(0,2,0),\n                    callback_function = function(obj) obj.deal(1, player_color) deck.destruct() end,\n                })\n                if deck.remainder then deck = deck.remainder end\n                break\n            end\n        end\n        if not found then\n            deck.destruct()\n            Player[player_color].broadcast(\"Unable to find aspect \"..aspect, \"Red\")\n        end\n    else\n        deck.deal(#deck.getObjects(), player_color)\n    end\nend\n\nfunction ToggleProgression()\n    useProgression = not useProgression\n    if useProgression then\n        self.editButton({\n            index          = 1,\n            label          = \"Progression: Yes\",\n        })\n    else\n        self.editButton({\n            index          = 1,\n            label          = \"Progression: No\",\n        })\n    end\nend\nfunction ToggleAspect(_, _, alt_click)\n    if alt_click then\n        useAspect = (useAspect - 1) % 3\n    else\n        useAspect = (useAspect + 1) % 3\n    end\n    if useAspect == 0 then\n        self.editButton({\n            index          = 2,\n            label          = \"Aspects: None\",\n        })\n    elseif useAspect == 1 then\n        self.editButton({\n            index          = 2,\n            label          = \"Aspects: Random\",\n        })\n    else\n        self.editButton({\n            index          = 2,\n            label          = \"Aspects: All\",\n        })\n    end\nend\n-----\nfunction upCast(obj)\n    local hits = Physics.cast({\n        origin       = obj.getPosition() + Vector(0,0.1,0),\n        direction    = Vector(0,1,0),\n        type         = 3,\n        size         = obj.getBoundsNormalized().size,\n        orientation  = obj.getRotation(),\n        max_distance = 0,\n        --debug        = true,\n    })\n    local hitObjects = {}\n    for _, v in pairs(hits) do\n        if v.hit_object ~= obj then table.insert(hitObjects,v.hit_object) end\n    end\n    return hitObjects\nend\n",
      "LuaScriptState": "",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": -0.045803502202034,
            "y": 0.2000013291835785,
            "z": -0.3963654339313507
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.04935725778341293,
            "y": 0.20000138878822327,
            "z": -0.08053477853536606
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.2724810540676117,
            "y": 0.2000008225440979,
            "z": -0.39527103304862976
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.27270379662513733,
            "y": 0.20000046491622925,
            "z": -0.08249422907829285
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.4873000383377075,
            "y": 0.20000049471855164,
            "z": -0.3973052203655243
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.4902610182762146,
            "y": 0.2000005692243576,
            "z": -0.08148223161697388
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.7080333232879639,
            "y": 0.2000005543231964,
            "z": -0.39645275473594666
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.7112560868263245,
            "y": 0.20000039041042328,
            "z": -0.0804196149110794
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.9315334558486938,
            "y": 0.2000008225440979,
            "z": -0.3984107971191406
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.9316842555999756,
            "y": 0.20000092685222626,
            "z": -0.07974832504987717
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -1.1519405841827393,
            "y": 0.20000135898590088,
            "z": -0.39701205492019653
          },
          "Tags": []
        }
      ]
    }
  }
}
